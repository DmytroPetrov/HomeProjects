
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ======================================================================================================================
# ================================================== A U T H ===========================================================
# ======================================================================================================================

###
#tags:
#- Auth
#summary: Sign in
#operationId: Signin
#consumes: application/json
#produces:
#- text/plain
#parameters:
#- in: body
#  description: dto for sign in
#  name: AdminSignInDTO
#  required: true
#  schema:
#    "$ref": "#/definitions/models.dtos.Credentials"
#responses:
#  '200':
#    description: success
#  '412':
#    description: No json passed
#  '417':
#    description: Wrong Credentials
#  '422':
#    description: Wrong json passed
#  '500':
#    description: Internal server error
###
POST        /api/auth/signin        controllers.AuthController.signIn

###
#tags:
#- Auth
#summary: Sign out
#operationId: Signout
#produces:
#- text/plain
#responses:
#  '200':
#    description: success
#  '500':
#    description: Internal server error
###
DELETE      /api/auth/signout       controllers.AuthController.signOut

###
#tags:
#- Auth
#summary: Email confirmation
#operationId: confirm
#consumes: application/text
#produces:
#- application/text
#responses:
#  '200':
#    description: Success
#  '406':
#   description: Token expired
#  '500':
#    description: Internal server error
###
GET         /api/auth/confirm_email/:token       controllers.AuthController.confirm(token)

###
#tags:
#- Auth
#summary: Sign up
#operationId: signUp
#consumes: application/json
#produces:
#- text/plain
#parameters:
#- in: body
#  description: dto for sign up
#  name: CreateUserDTO
#  required: true
#  schema:
#    "$ref": "#/definitions/models.dtos.CreateUserDTO"
#responses:
#  '200':
#    description: Success
#  '409':
#   description: User already exist
#  '422':
#    description: Wrong json passed
#  '500':
#    description: Internal server error
###
POST        /api/auth/signup        controllers.AuthController.signUp

# ======================================================================================================================
# =================================================== R E C O R D ======================================================
# ======================================================================================================================

###
#tags:
#- Record
#summary: Create record
#operationId: CreateRecord
#consumes:
#  - application/json
#produces:
#  - text/plain
#  - application/json
#security:
#  - Cookie: []
#parameters:
#- in: body
#  description: body to create record
#  name: Record
#  required: true
#  schema:
#     $ref: '#/definitions/models.dtos.RecordDTO'
#responses:
#  '200':
#    description: Successfully created
#  '401':
#    description: Unauthorized
#  '412':
#    description: No json passed
#  '422':
#    description: Wrong json
#  '500':
#    description: Internal server error
###
POST        /api/record/create           controllers.RecordController.create


###
#tags:
#- Record
#summary: Get record by id
#operationId: RecordGetById
#produces:
#  - text/plain
#  - application/json
#security:
#  - Cookie: []
#responses:
#  '200':
#    description: record
#    schema:
#      "$ref": "#/definitions/models.Record"
#  '401':
#    description: Unauthorized
#  '404':
#    description: Not found
#  '500':
#    description: Internal server error
###
GET         /api/record/:id            controllers.RecordController.getById(id: String)

###
#tags:
#- Record
#summary: Get user's recordss
#operationId: RecordsGetByUser
#produces:
#  - text/plain
#  - application/json
#security:
#  - Cookie: []
#responses:
#  '200':
#    description: record
#    schema:
#      "$ref": "#/definitions/models.Record"
#  '401':
#    description: Unauthorized
#  '404':
#    description: Not found
#  '500':
#    description: Internal server error
###
GET         /api/record/user/:id            controllers.RecordController.getByUser(id: Long)

###
#tags:
#- Record
#summary: Update record
#operationId: UpdateRecord
#parameters:
#- in: body
#  description: record
#  name: Record
#  required: true
#  schema:
#     $ref: '#/definitions/models.dtos.RecordDTO'
#security:
#  - Cookie: []
#responses:
#  '200':
#    description: Successfully updated
#  '401':
#    description: Unauthorized
#  '404':
#    description: Not found
#  '412':
#    description: No json passed
#  '422':
#    description: Wrong json
#  '500':
#    description: Internal server error
###
PATCH         /api/record/update/:id            controllers.RecordController.update(id: String)

###
#tags:
#- Record
#summary: Delete record
#operationId: DeleteRecord
#security:
#  - Cookie: []
#responses:
#  '200':
#    description: Successfully deleted
#  '401':
#    description: Unauthorized
#  '404':
#    description: Not found
#  '500':
#    description: Internal server error
###
DELETE         /api/record/delete/:id            controllers.RecordController.delete(id: String)


### NoDocs ###
GET           /docs/swagger-ui/*file                 controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)
### NoDocs ###
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)